#!/usr/bin/env bash

source $(dirname $0)/../_basics
source $(dirname $0)/test_db_setup
source $(dirname $0)/select_test_env

# make sure db is up and running
docker compose up db -d

# ask user for environment
HIT_TEST_ENV=$(select_test_env)
TEST_DB_NAME="hitobito_test_$HIT_TEST_ENV"

echo "Starting test env for: $HIT_TEST_ENV"

# reset/create mysql db
setup_test_db $TEST_DB_NAME

if [[ "$HIT_TEST_ENV" == "core" ]]; then
  PREPARE_RAILS_SPEC_CMD="rails db:schema:load"
  WORKDIR=/usr/src/app/hitobito
else
  PREPARE_RAILS_SPEC_CMD="rake app:db:schema:load app:wagon:migrate"
  WORKDIR="/usr/src/app/hitobito_$HIT_TEST_ENV"
fi

# prepare bundle & co
docker compose run --rm \
  --workdir=/usr/src/app/hitobito \
  -e RAILS_ENV=test \
  -e RAILS_TEST_DB_NAME=$TEST_DB_NAME \
  -e SKIP_INIT=1 \
  rails_test \
  bash -c "bundle install && bundle exec ./bin/webpack-test-compile"

# run test env
docker compose run --rm \
  --workdir=$WORKDIR \
  -e RAILS_ENV=test \
  -e RAILS_TEST_DB_NAME=$TEST_DB_NAME \
  -e SKIP_INIT=1 \
  rails_test \
  bundle exec "$PREPARE_RAILS_SPEC_CMD && bash"
