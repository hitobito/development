services:
  rails: &rails
    build:
      context: ./docker
      dockerfile: rails.dockerfile
    image: ghcr.io/hitobito/development/rails
    restart: unless-stopped
    user: "${RAILS_UID:-1000}"
    tty: true
    stdin_open: true
    depends_on:
    - postgres
    - mailcatcher
    - cache
    - webpack
    env_file: docker/rails.env
    environment:
      WEBPACKER_DEV_SERVER_HOST: webpack
      DISABLE_SPRING: 'true'
    ports:
    - "3000:3000"
    volumes:
    - ./app/:/usr/src/app
    - hitobito_bundle:/opt/bundle
    - seed:/seed
    - ./docker/home/rails:/home/developer
    - /tmp/.X11-unix:/tmp/.X11-unix
    #- /etc/timezone:/etc/timezone:ro
    - /etc/localtime:/etc/localtime:ro
    - /var/run/docker.sock:/var/run/docker.sock
    #healthcheck:
    #  test: [ "CMD", "curl", "--fail", "http://localhost:3000/healthz" ]
    #  interval: 5s
    #  timeout: 5s
    #  start_period: 30m

  # `exec` into this to execute the tests of the core
  rails_test:
    <<: *rails
    command: [ 'sleep', 'infinity' ]
    ports: []
    environment:
      RAILS_ENV: test
      WEBPACKER_DEV_SERVER_HOST: null
      RAILS_SPHINX_HOST: null
      SKIP_SEEDS: 1
      SKIP_BUNDLE_INSTALL: 1
    depends_on:
    - postgres

  worker:
    <<: *rails
    command: [ 'rails', 'jobs:work' ]
    ports: []
    environment:
      SKIP_RAILS_MIGRATIONS: 1
      SKIP_SEEDS: 1
      SKIP_BUNDLE_INSTALL: 1
    depends_on:
    - rails
    - postgres
    - mailcatcher
    - cache

  # Dependencies
  mailcatcher:
    restart: unless-stopped
    image: ghcr.io/hitobito/development/mailcatcher
    build:
      context: ./docker
      dockerfile: mailcatcher.dockerfile
    ports:
    - "1025:1025"
    - "1080:1080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:1080" ]
      interval: 5s
      timeout: 5s
  cache:
    restart: unless-stopped
    image: memcached:1.6-alpine
    command: [ memcached, -l, '0.0.0.0', -p, '11211' ]

  sphinx:
    restart: unless-stopped
    image: macbre/sphinxsearch:3.1.1
    command: sphinx-start
    depends_on:
    - postgres
    volumes:
    - ./docker/sphinx.conf:/opt/sphinx/conf/sphinx.conf:ro
    - ./docker/sphinx-start:/usr/local/bin/sphinx-start:ro
    - ./docker/sphinx-indexer:/usr/local/bin/sphinx-indexer:ro
    - sphinx_indexes:/opt/sphinx/indexes
    profiles: [sphinx]

  postgres:
    image: postgres:16
    env_file: ./docker/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgresql-setup.sql:/docker-entrypoint-initdb.d/postgresql-setup.sql:ro
      - ./docker/test-setup-postgresql.sql:/docker-entrypoint-initdb.d/test-setup-postgresql.sql:ro
      - postgres:/var/lib/postgresql/data

  webpack:
    restart: unless-stopped
    build:
      context: ./docker
      dockerfile: rails.dockerfile
    image: ghcr.io/hitobito/development/rails
    entrypoint: [ "webpack-entrypoint.sh" ]
    env_file: docker/rails.env
    environment:
      WEBPACKER_DEV_SERVER_HOST: webpack
      SKIP_BUNDLE_INSTALL: 1
    user: "${RAILS_UID:-1000}"
    command: /usr/src/app/hitobito/bin/webpack-dev-server
    ports:
    - "3035:3035"
    volumes:
    - ./app/:/usr/src/app
    - hitobito_bundle:/opt/bundle
    - hitobito_yarn_cache:/home/developer/.cache/yarn

volumes:
  postgres:
  seed:
  hitobito_bundle:
    external: true
  hitobito_yarn_cache:
    external: true
  sphinx_indexes:
